# Based on https://github.com/marzent/IINACT/blob/main/.github/workflows/build.yml

name: Plugin Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: '0.0.0.0'
      DALAMUD_HOME: /tmp/dalamud
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Download Dalamud
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip /tmp/dalamud

      - name: Build Plugin
        run: dotnet build -c release

      - name: Make Release Zip
        shell: pwsh
        run: |
          Compress-Archive -Path './MemoMate/bin/Release/*' -DestinationPath './release.zip'

      - name: Build repo.json
        shell: pwsh
        run: |
          $command = Get-Command("./MemoMate/bin/Release/MemoMate.dll")
          $versionInfo = $command.FileVersionInfo
          $version = $versionInfo.FileVersion
          Write-Output "RELEASE_VERSION=$version" >> $env:GITHUB_ENV

          $manifest = Get-Content -Raw './MemoMate/bin/Release/MemoMate.json' | ConvertFrom-Json
          # Removed since dev plugins are required to have this.
          # $manifest | Add-Member -Name "InternalName" -Value $manifest.Name -MemberType NoteProperty
          $manifest | Add-Member -Name "AssemblyVersion" -Value $version -MemberType NoteProperty
          $manifest | Add-Member -Name "DownloadLinkInstall" -Value "https://github.com/ArimochiXIV/MemoMate/releases/download/release-$version/release.zip" -MemberType NoteProperty
          $manifest | ConvertTo-Json | % { "[`n" + $_ + "`n]" } | Set-Content repo.json

      - name: Create Release
        if: ${{ env.RELEASE_VERSION != '0.0.0.0' }}
        uses: softprops/action-gh-release@v1
        with:
          files: release.zip
          name: MemoMate ${{ env.RELEASE_VERSION }}
          tag_name: release-${{ env.RELEASE_VERSION }}

      - name: Update repo.json on remote.
        if: ${{ env.RELEASE_VERSION != '0.0.0.0' }}
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin main
          git checkout main
          git add repo.json
          git commit -m "[CI] Update repo.json for 6${{ env.RELEASE_VERSION }}" || true
          git push origin main

      - name: Trigger PluginRepo rebuild.
        run: |
          curl -X POST https://api.github.com/repos/ArimochiXIV/PluginRepo/dispatches \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer ${{ secrets.ACTIONS_KEY }}' \
              --data '{ "event_type": "MemoMate ${{ env.RELEASE_VERSION }}" }'